{"version":3,"sources":["app/utils.ts","app/reducer.ts","app/selectors.ts","app/actions.ts","components/colors.ts","components/Input.tsx","components/TrackingInput.tsx","components/DataList.tsx","components/NameInputs.tsx","pages/ExampleProps.tsx","pages/ExampleUseSelector.tsx","app/reselect.ts","components/FullName.tsx","pages/ExampleReselect.tsx","pages/ExampleUseMemo.tsx","components/TrackingButton.tsx","pages/ExampleUseState.tsx","pages/ExampleUseCallback.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["instanceIndex","instances","getInstanceNumber","name","canAct","value","counter","doExpensiveCalculation","instance","initialState","names","Array","fill","map","index","first","last","clicks","slice","createSlice","reducers","set","state","payload","item","setFirstName","setLastName","add","push","length","remove","pop","addWithLogic","removeWithLogic","addClick","unboxParameters","callback","args","actions","getAllData","getData","getName","getFullName","useAllData","useSelector","useData","useName","useFullName","useFullNameWithShallow","shallowEqual","useUpdate","dispatch","useDispatch","handleFirstChange","useCallback","handleLastChange","useUpdateWithoutUseCallback","useButtonHandlersWithState","useState","setClicks","handleAdd","prev","handleRemove","useButtonHandlersWithRef","useRef","current","useButtonHandlersWithGlobal","useButtonHandlersWithRedux","useButtonHandlersWithImprovedRedux","useButtonHandlersWithFixedRedux","red","blue","yellow","getColor","previous","Input","onChange","style","currentValue","setCurrentValue","useEffect","update","handleBlur","handleKeyPress","key","handleChange","event","target","onKeyPress","onBlur","size","disabled","TrackingInput","ref","backgroundColor","padding","marginRight","borderRadius","MemoizedTrackingInput","memo","DataList","header","Component","componentProps","data","Divider","Header","List","MemoizedNameInputs","useHook","children","ListItem","NameInputs","component","WithMemoizedItem","MemoizedRenderFirstName","MemoizedRenderLastName","ExampleProps","WithAllData","RenderFirstNameWithAllData","RenderLastNameWithAllData","WithData","RenderFirstNameWithData","RenderLastNameWithData","WithName","RenderFirstNameWithName","RenderLastNameWithName","WithAttribute","RenderFirstNameWithAttribute","RenderLastNameWithAttribute","useFirstName","useLastName","ExampleUseSelector","getInstance","_state","path","getFirstNameWithProps","getLastNameWithProps","createFullNameCounterSelector","createSelector","fullNameCounterSelector","useFullNameWithReselect","selector","useMemo","FullNameString","MemoizedFullNameString","MemoizedFullNameObject","FullNameRedux","MemoizedFullNameRedux","FromRedux","useFullNameCounter","FromReselect","useFullNameCounterWithReselect","FromFixedReselect","useFullNameCounterWithFixedReselect","ExampleReselect","FromObject","FromObjectWithMemo","FromString","FromStringWithUseMemo","FromStringWithoutMemoization","FromReduxShallow","FromReduxShallowWithoutMemo","ExampleUseMemo","TrackingButton","onClick","Button","border","width","height","circular","UseState","ItemList","Buttons","ExampleUseState","ExampleUseCallback","Brrrrrrrrrrrrrr","App","panes","menuItem","render","Tab","Pane","Container","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.393504e6.chunk.js","sourcesContent":["import { Item } from './reducer'\r\n\r\nlet instanceIndex = 0\r\nconst instances = {} as Record<string, number>\r\n\r\nexport const getInstanceNumber = (name: string) => {\r\n  if (!instances[name]) instances[name] = instanceIndex++\r\n  return instances[name]\r\n}\r\n\r\nexport type UpdateHook = (\r\n  instance: number,\r\n  index: number\r\n) => { handleFirstChange: (first: string) => void; handleLastChange: (first: string) => void }\r\n\r\nexport type ItemProps = {\r\n  item: Item\r\n  instance: number\r\n  useHook?: UpdateHook\r\n}\r\nexport const canAct = (value: number) => value % 3 === 0\r\n\r\nconst counter = {} as Record<number, number>\r\n\r\nexport const doExpensiveCalculation = (instance: number) => {\r\n  if (!counter[instance]) counter[instance] = 0\r\n  return ++counter[instance]\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { canAct } from './utils'\r\n\r\nexport interface Item {\r\n  index: number\r\n  first: string\r\n  last: string\r\n}\r\n\r\ninterface State {\r\n  names: Item[][]\r\n  clicks: number\r\n}\r\n\r\nconst initialState: State = {\r\n  names: Array(50)\r\n    .fill(null)\r\n    .map(() => [\r\n      { index: 0, first: 'John', last: 'Doe' },\r\n      { index: 1, first: 'Jane', last: 'Doe' },\r\n    ]),\r\n  clicks: 1,\r\n}\r\n\r\nexport const slice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    set: (state, { payload }: PayloadAction<[number, Item]>) => {\r\n      const [instance, item] = payload\r\n      state.names[instance][item.index] = item\r\n    },\r\n    setFirstName: (state, { payload }: PayloadAction<[number, number, string]>) => {\r\n      const [instance, index, name] = payload\r\n      state.names[instance][index].first = name\r\n    },\r\n    setLastName: (state, { payload }: PayloadAction<[number, number, string]>) => {\r\n      const [instance, index, name] = payload\r\n      state.names[instance][index].last = name\r\n    },\r\n    add: (state, { payload }: PayloadAction<[number]>) => {\r\n      const [instance] = payload\r\n      state.names[instance].push({ index: state.names[instance].length, first: '', last: '' })\r\n    },\r\n    remove: (state, { payload }: PayloadAction<[number]>) => {\r\n      const [instance] = payload\r\n      state.names[instance].pop()\r\n    },\r\n    addWithLogic: (state, { payload }: PayloadAction<[number]>) => {\r\n      if (canAct(state.clicks)) {\r\n        const [instance] = payload\r\n        state.names[instance].push({ index: state.names[instance].length, first: '', last: '' })\r\n      }\r\n      state.clicks++\r\n    },\r\n    removeWithLogic: (state, { payload }: PayloadAction<[number]>) => {\r\n      if (canAct(state.clicks)) {\r\n        const [instance] = payload\r\n        state.names[instance].pop()\r\n      }\r\n      state.clicks++\r\n    },\r\n    addClick: (state) => {\r\n      state.clicks++\r\n    },\r\n  },\r\n})\r\n\r\nconst unboxParameters = <T extends unknown[]>(callback: (args: T) => void) => (...args: T) => callback(args)\r\n\r\nexport const set = unboxParameters(slice.actions.set)\r\nexport const setFirstName = unboxParameters(slice.actions.setFirstName)\r\nexport const setLastName = unboxParameters(slice.actions.setLastName)\r\nexport const add = unboxParameters(slice.actions.add)\r\nexport const remove = unboxParameters(slice.actions.remove)\r\nexport const addWithLogic = unboxParameters(slice.actions.addWithLogic)\r\nexport const removeWithLogic = unboxParameters(slice.actions.removeWithLogic)\r\nexport const addClick = slice.actions.addClick\r\n\r\nexport default slice.reducer\r\n","import { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport { canAct } from './utils'\r\n\r\nconst getAllData = (state: RootState) => state.names\r\nconst getData = (state: RootState, instance: number) => getAllData(state)[instance]\r\nconst getName = (state: RootState, instance: number, index: number) => getData(state, instance)[index]\r\nconst getFullName = (state: RootState, instance: number, index: number) => {\r\n  const { first, last } = getName(state, instance, index)\r\n  return { first, last }\r\n}\r\n\r\nexport const useAllData = () => useSelector(getAllData)\r\n\r\nexport const useData = (instance: number) => useSelector((state: RootState) => getData(state, instance))\r\n\r\nexport const useName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index))\r\n\r\nexport const useFirstName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index).first)\r\n\r\nexport const useLastName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index).last)\r\n\r\nexport const useFullName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getFullName(state, instance, index))\r\n\r\nexport const useFullNameWithShallow = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getFullName(state, instance, index), shallowEqual)\r\n\r\nexport const useClicks = () => useSelector((state: RootState) => state.clicks)\r\n\r\nexport const useCanAct = () => useSelector((state: RootState) => canAct(state.clicks))\r\n","import { useCallback, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { add, addClick, addWithLogic, remove, removeWithLogic, setFirstName, setLastName } from './reducer'\r\nimport { useClicks, useCanAct } from './selectors'\r\nimport { getInstanceNumber, canAct } from './utils'\r\n\r\nexport const useUpdate = (instance: number, index: number) => {\r\n  const dispatch = useDispatch()\r\n  const handleFirstChange = useCallback(\r\n    (first: string) => {\r\n      dispatch(setFirstName(instance, index, first))\r\n    },\r\n    [dispatch, instance, index]\r\n  )\r\n  const handleLastChange = useCallback(\r\n    (last: string) => {\r\n      dispatch(setLastName(instance, index, last))\r\n    },\r\n    [dispatch, instance, index]\r\n  )\r\n  return { handleFirstChange, handleLastChange }\r\n}\r\n\r\nexport const useUpdateWithoutUseCallback = (instance: number, index: number) => {\r\n  const dispatch = useDispatch()\r\n  const handleFirstChange = (first: string) => {\r\n    dispatch(setFirstName(instance, index, first))\r\n  }\r\n  const handleLastChange = (last: string) => {\r\n    dispatch(setLastName(instance, index, last))\r\n  }\r\n  return { handleFirstChange, handleLastChange }\r\n}\r\n\r\nexport const useButtonHandlersWithState = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const [, setClicks] = useState(1)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    setClicks((prev) => {\r\n      if (canAct(prev)) dispatch(add(instance))\r\n      return prev + 1\r\n    })\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    setClicks((prev) => {\r\n      if (canAct(prev)) dispatch(remove(instance))\r\n      return prev + 1\r\n    })\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithRef = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const clicks = useRef(1)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks.current)) dispatch(add(instance))\r\n    clicks.current++\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks.current)) dispatch(remove(instance))\r\n    clicks.current++\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nlet clicks = 1\r\n\r\nexport const useButtonHandlersWithGlobal = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(add(instance))\r\n    clicks++\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(remove(instance))\r\n    clicks++\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const clicks = useClicks()\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(add(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, clicks])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(remove(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, clicks])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithImprovedRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const canAct = useCanAct()\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct) dispatch(add(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, canAct])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct) dispatch(remove(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, canAct])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithFixedRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    dispatch(addWithLogic(instance))\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    dispatch(removeWithLogic(instance))\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n","export const red = '#fc9d9d'\r\nexport const blue = '#827cf7'\r\nexport const yellow = '#e0de6e'\r\nexport const white = 'white'\r\n\r\nexport const getColor = (previous: string) => {\r\n  switch (previous) {\r\n    case white:\r\n      return red\r\n    case red:\r\n      return blue\r\n    case blue:\r\n      return yellow\r\n    case yellow:\r\n      return red\r\n    default:\r\n      return red\r\n  }\r\n}\r\n","import React, { CSSProperties, useCallback, useEffect, useState } from 'react'\r\nimport { Input as SInput } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  value: string\r\n  onChange?: (value: string) => void\r\n  style?: CSSProperties\r\n}\r\n\r\nconst Input = ({ value, onChange, style }: Props) => {\r\n  const [currentValue, setCurrentValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    setCurrentValue(value)\r\n  }, [value])\r\n\r\n  const update = useCallback(() => {\r\n    setCurrentValue((prev) => {\r\n      if (prev !== value && onChange) onChange(prev)\r\n      return prev\r\n    })\r\n  }, [onChange, value])\r\n\r\n  const handleBlur = useCallback(() => {\r\n    update()\r\n  }, [update])\r\n\r\n  const handleKeyPress = useCallback(\r\n    ({ key }) => {\r\n      if (key === 'Enter') update()\r\n    },\r\n    [update]\r\n  )\r\n\r\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentValue(event.target.value)\r\n  }, [])\r\n\r\n  return (\r\n    <SInput\r\n      value={currentValue}\r\n      onKeyPress={handleKeyPress}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      style={style}\r\n      size='small'\r\n      disabled={!onChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { useRef, useEffect, memo } from 'react'\r\nimport { getColor } from './colors'\r\nimport Input from './Input'\r\n\r\nexport const TrackingInput = ({ value, onChange }: { value: string; onChange?: (value: string) => void }) => {\r\n  const ref = useRef('')\r\n  useEffect(() => {\r\n    ref.current = getColor(ref.current)\r\n  })\r\n  return (\r\n    <Input\r\n      value={value}\r\n      onChange={onChange}\r\n      style={{ backgroundColor: ref.current, padding: 5, marginRight: 5, borderRadius: 5 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const MemoizedTrackingInput = memo(TrackingInput)\r\n","import React, { FC } from 'react'\r\nimport { Divider, Header, List } from 'semantic-ui-react'\r\nimport { getInstanceNumber, ItemProps } from '../app/utils'\r\nimport { useData } from '../app/selectors'\r\n\r\ninterface Props<C> {\r\n  name: string\r\n  header: string\r\n  Component: FC<C & ItemProps>\r\n  componentProps?: C\r\n}\r\n\r\nconst DataList = <C extends unknown>({ header, name, Component, componentProps }: Props<C>) => {\r\n  const instance = getInstanceNumber(name)\r\n  const data = useData(instance)\r\n  return (\r\n    <>\r\n      <Divider />\r\n      <Header size='small'>{header}</Header>\r\n      <List>\r\n        {data.map((item) => (\r\n          <Component item={item} key={item.index} instance={instance} {...componentProps} />\r\n        ))}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DataList\r\n","import React, { PropsWithChildren } from 'react'\r\nimport { ListItem } from 'semantic-ui-react'\r\nimport { ItemProps } from '../app/utils'\r\nimport { MemoizedTrackingInput, TrackingInput } from './TrackingInput'\r\nimport { useUpdate } from '../app/actions'\r\n\r\nexport const MemoizedNameInputs = ({ item, instance, useHook, children }: PropsWithChildren<ItemProps>) => {\r\n  const { first, last, index } = item\r\n  const hook = useHook ?? useUpdate\r\n  const { handleFirstChange, handleLastChange } = hook(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <MemoizedTrackingInput value={first} onChange={handleFirstChange} />\r\n      <MemoizedTrackingInput value={last} onChange={handleLastChange} />\r\n      {children}\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport const NameInputs = ({ item, instance, useHook, children }: PropsWithChildren<ItemProps>) => {\r\n  const { first, last, index } = item\r\n  const hook = useHook ?? useUpdate\r\n  const { handleFirstChange, handleLastChange } = hook(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <TrackingInput value={first} onChange={handleFirstChange} />\r\n      <TrackingInput value={last} onChange={handleLastChange} />\r\n      {children}\r\n    </ListItem>\r\n  )\r\n}\r\n","import React, { memo } from 'react'\r\nimport { Divider, Header, ItemProps, ListItem } from 'semantic-ui-react'\r\nimport { Item } from '../app/reducer'\r\nimport { useUpdate } from '../app/actions'\r\nimport { TrackingInput } from '../components/TrackingInput'\r\nimport DataList from '../components/DataList'\r\nimport { NameInputs, MemoizedNameInputs } from '../components/NameInputs'\r\n\r\nconst component = 'ExampleProps_'\r\n\r\nconst ExampleProps = () => {\r\n  return (\r\n    <>\r\n      <Header>Components render when parent renders. This can be prevented with memo.</Header>\r\n      <DataList name={`${component}NameInputs`} header='Everything renders on change.' Component={NameInputs} />\r\n      <DataList\r\n        name={`${component}MemoizedNameInputs`}\r\n        header='With memo, only the changed input renders.'\r\n        Component={MemoizedNameInputs}\r\n      />\r\n      <Divider />\r\n      <Header>\r\n        Components also render when props change. This is important when using references (objects, arrays, functions).\r\n      </Header>\r\n      <DataList\r\n        name={`${component}WithMemoizedItem`}\r\n        header='When props are delivered as an object, the whole row renders.'\r\n        Component={WithMemoizedItem}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst WithMemoizedItem = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <MemoizedRenderFirstName item={item} onChange={handleFirstChange} />\r\n      <MemoizedRenderLastName item={item} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst MemoizedRenderFirstName = memo(({ item, onChange }: { item: Item; onChange: (value: string) => void }) => (\r\n  <TrackingInput value={item.first} onChange={onChange} />\r\n))\r\n\r\nconst MemoizedRenderLastName = memo(({ item, onChange }: { item: Item; onChange: (value: string) => void }) => (\r\n  <TrackingInput value={item.last} onChange={onChange} />\r\n))\r\n\r\nexport default ExampleProps\r\n","import React, { memo } from 'react'\r\nimport { Header, ItemProps, ListItem } from 'semantic-ui-react'\r\nimport { useUpdate } from '../app/actions'\r\nimport { TrackingInput } from '../components/TrackingInput'\r\nimport { useData, useAllData, useName, useFirstName, useLastName } from '../app/selectors'\r\nimport DataList from '../components/DataList'\r\n\r\nconst ExampleUseSelector = () => {\r\n  return (\r\n    <>\r\n      <Header>useSelector forces a render if the return value changes.</Header>\r\n      <Header>So universal hooks will cause unnecessary renders even when the component data doesn't change.</Header>\r\n      <DataList\r\n        name='ExampleUseSelector_AllData'\r\n        header='Uses data from all instances. Renders even when other components change.'\r\n        Component={WithAllData}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Data'\r\n        header='Uses all data from own instance. All inputs render.'\r\n        Component={WithData}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Name'\r\n        header='Uses the whole name object. The whole row renders.'\r\n        Component={WithName}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Attribute'\r\n        header='Uses only the needed attribute. Only the changed value renders.'\r\n        Component={WithAttribute}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst WithAllData = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithAllData instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithAllData instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithData = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithData instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithData instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithName = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithName instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithName instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithAttribute = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithAttribute instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithAttribute instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\ninterface DataProps {\r\n  instance: number\r\n  index: number\r\n  onChange: (value: string) => void\r\n}\r\n\r\nconst RenderFirstNameWithAllData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useAllData()[instance][index].first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithAllData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useAllData()[instance][index].last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useData(instance)[index].first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useData(instance)[index].last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithName = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useName(instance, index).first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithName = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useName(instance, index).last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithAttribute = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useFirstName(instance, index)\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithAttribute = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useLastName(instance, index)\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\nexport default ExampleUseSelector\r\n","import { createSelector } from '@reduxjs/toolkit'\r\nimport { useMemo } from 'react'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport { doExpensiveCalculation } from './utils'\r\n\r\nconst getName = (state: RootState, instance: number, index: number) => state.names[instance][index]\r\n\r\nconst getInstance = (_state: RootState, path: [number, number]) => path[0]\r\nconst getFirstNameWithProps = (state: RootState, path: [number, number]) => getName(state, path[0], path[1]).first\r\nconst getLastNameWithProps = (state: RootState, path: [number, number]) => getName(state, path[0], path[1]).last\r\nconst createFullNameCounterSelector = () =>\r\n  createSelector(\r\n    getInstance,\r\n    getFirstNameWithProps,\r\n    getLastNameWithProps,\r\n    (instance, first, last) => `${first} ${last} ${doExpensiveCalculation(instance)}`\r\n  )\r\nconst fullNameCounterSelector = createFullNameCounterSelector()\r\n\r\nexport const useFullNameCounter = (instance: number, index: number) => {\r\n  return useSelector((state: RootState) => {\r\n    const { first, last } = getName(state, instance, index)\r\n    return `${first} ${last} ${doExpensiveCalculation(instance)}`\r\n  }, shallowEqual)\r\n}\r\n\r\nexport const useFullNameCounterWithReselect = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => fullNameCounterSelector(state, [instance, index]))\r\n\r\nexport const useFullNameCounterWithFixedReselect = (instance: number, index: number) => {\r\n  const selector = useMemo(() => createFullNameCounterSelector(), [])\r\n  return useSelector((state: RootState) => selector(state, [instance, index]))\r\n}\r\nconst createFullNameSelector = () =>\r\n  createSelector(getFirstNameWithProps, getLastNameWithProps, (first, last) => ({ first, last }))\r\n\r\nexport const useFullNameWithReselect = (instance: number, index: number) => {\r\n  const selector = useMemo(() => createFullNameSelector(), [])\r\n  return useSelector((state: RootState) => selector(state, [instance, index]))\r\n}\r\n","import React, { memo } from 'react'\r\nimport { TrackingInput } from './TrackingInput'\r\n\r\nexport const FullNameString = ({ name }: { name: string }) => <TrackingInput value={name} />\r\n\r\nexport const MemoizedFullNameString = memo(FullNameString)\r\n\r\nexport const MemoizedFullNameObject = memo(({ name }: { name: { first: string; last: string } }) => (\r\n  <FullNameString name={`${name.first} ${name.last}`} />\r\n))\r\n\r\ninterface Props {\r\n  instance: number\r\n  index: number\r\n  selector: (instance: number, index: number) => { first: string; last: string }\r\n}\r\n\r\nexport const FullNameRedux = ({ instance, index, selector }: Props) => {\r\n  const name = selector(instance, index)\r\n\r\n  return <MemoizedFullNameObject name={name} />\r\n}\r\n\r\nexport const MemoizedFullNameRedux = memo(FullNameRedux)\r\n","import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\nimport {\r\n  useFullNameCounter,\r\n  useFullNameCounterWithReselect,\r\n  useFullNameCounterWithFixedReselect,\r\n} from '../app/reselect'\r\nimport {} from '../app/selectors'\r\nimport { ItemProps } from '../app/utils'\r\nimport DataList from '../components/DataList'\r\nimport { FullNameString } from '../components/FullName'\r\nimport { MemoizedNameInputs } from '../components/NameInputs'\r\n\r\nconst component = 'ExampleReselect_'\r\n\r\nconst ExampleReselect = () => {\r\n  return (\r\n    <>\r\n      <Header>reselect library allows memoization based on input instead of output values.</Header>\r\n      <Header>This can be used to avoid expensive calculations and reusing complex selector logic.</Header>\r\n      <DataList\r\n        name={`${component}FromRedux`}\r\n        header='Without reselect, the full name is recalculated every time.'\r\n        Component={FromRedux}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReselect`}\r\n        header=\"Default implementation of reselect doesn't work for lists (cachesize of 1).\"\r\n        Component={FromReselect}\r\n      />\r\n      <DataList\r\n        name={`${component}FromFixedReselect`}\r\n        header='This can be fixed by creating selector instance for every item.'\r\n        Component={FromFixedReselect}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst FromRedux = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounter(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\nconst FromReselect = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounterWithReselect(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\nconst FromFixedReselect = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounterWithFixedReselect(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\nexport default ExampleReselect\r\n","import React, { useMemo } from 'react'\r\nimport { Divider, Header } from 'semantic-ui-react'\r\nimport DataList from '../components/DataList'\r\nimport { ItemProps } from '../app/utils'\r\nimport { MemoizedNameInputs } from '../components/NameInputs'\r\nimport {\r\n  MemoizedFullNameObject,\r\n  MemoizedFullNameRedux,\r\n  FullNameRedux,\r\n  MemoizedFullNameString,\r\n  FullNameString,\r\n} from '../components/FullName'\r\nimport { useFullName, useFullNameWithShallow } from '../app/selectors'\r\nimport { useFullNameWithReselect } from '../app/reselect'\r\n\r\nconst component = 'ExampleUseMemo_'\r\n\r\nconst ExampleUseMemo = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        useMemo can be used to keep object references same. This prevents extra renders for <u>memoized</u> components.\r\n      </Header>\r\n      <DataList\r\n        name={`${component}FromObject`}\r\n        header='Full name field gets props as an object. This object is created every render with a different reference.'\r\n        Component={FromObject}\r\n      />\r\n      <DataList\r\n        name={`${component}FromObjectWithMemo`}\r\n        header='With useMemo, only the changed name renders.'\r\n        Component={FromObjectWithMemo}\r\n      />\r\n      <Divider />\r\n      <Header>useMemo is pointless for plain values like strings (except if the calculation is expensive).</Header>\r\n      <DataList\r\n        name={`${component}FromString`}\r\n        header='Full name field gets props as an string, only the changed name renders.'\r\n        Component={FromString}\r\n      />\r\n      <DataList\r\n        name={`${component}FromStringWithUseMemo`}\r\n        header='The behavior is exactly same with useMemo.'\r\n        Component={FromStringWithUseMemo}\r\n      />\r\n      <DataList\r\n        name={`${component}FromStringWithouMemoization`}\r\n        header=\"Without memoization, useMemo is still pointless because it doesn't prevent renders.\"\r\n        Component={FromStringWithoutMemoization}\r\n      />\r\n      <Divider />\r\n      <Header>Redux can also be used but requires a proper implementation.</Header>\r\n      <DataList\r\n        name={`${component}FromRedux`}\r\n        header='The original issue exists with the default implementation.'\r\n        Component={FromRedux}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReduxShallow`}\r\n        header='useSelector supports memoization to prevent unnecessary renders.'\r\n        Component={FromReduxShallow}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReduxShallowWithoutMemo`}\r\n        header='useSelector has a bit surpising feature that the memoization is forgotten when the parent causes the render.'\r\n        Component={FromReduxShallowWithoutMemo}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReselect`}\r\n        header='This works better with reselect library.'\r\n        Component={FromReselect}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst FromObject = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = { first, last }\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameObject name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromObjectWithMemo = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = useMemo(() => ({ first, last }), [first, last])\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameObject name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromString = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameString name={`${first} ${last}`} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromStringWithUseMemo = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = useMemo(() => `${first} ${last}`, [first, last])\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromStringWithoutMemoization = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = useMemo(() => `${first} ${last}`, [first, last])\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromRedux = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameRedux instance={instance} index={index} selector={useFullName} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReduxShallow = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameRedux instance={instance} index={index} selector={useFullNameWithShallow} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReduxShallowWithoutMemo = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameRedux instance={instance} index={index} selector={useFullNameWithShallow} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReselect = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameRedux instance={instance} index={index} selector={useFullNameWithReselect} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nexport default ExampleUseMemo\r\n","import React, { PropsWithChildren, useEffect, useRef } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { getColor } from './colors'\r\n\r\nconst TrackingButton = ({ children, onClick }: PropsWithChildren<{ onClick: () => void }>) => {\r\n  const ref = useRef('')\r\n  useEffect(() => {\r\n    ref.current = getColor(ref.current)\r\n  })\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: ref.current, padding: 5, border: 'solid 2px black', width: 40, height: 40 }}\r\n      circular\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default TrackingButton\r\n","import React from 'react'\r\nimport { Divider, Header } from 'semantic-ui-react'\r\nimport DataList from '../components/DataList'\r\nimport TrackingButton from '../components/TrackingButton'\r\nimport { NameInputs } from '../components/NameInputs'\r\nimport {\r\n  useButtonHandlersWithState,\r\n  useButtonHandlersWithRef,\r\n  useButtonHandlersWithGlobal,\r\n  useButtonHandlersWithRedux,\r\n  useButtonHandlersWithImprovedRedux,\r\n  useButtonHandlersWithFixedRedux,\r\n} from '../app/actions'\r\n\r\nconst ExampleUseState = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        In the following example, add and remove buttons only work every 3th click. <u>No memoization</u> is used.\r\n      </Header>\r\n      <UseState />\r\n      <ItemList\r\n        name='ExampleUseState_UseStateRefactored'\r\n        header='The button logic can be refactored to own component. Then every click only renders the buttons'\r\n        useHook={useButtonHandlersWithState}\r\n      />\r\n      <ItemList\r\n        name='ExampleUseState_UseRef'\r\n        header='With useRef, clicks no longer cause a render.'\r\n        useHook={useButtonHandlersWithRef}\r\n      />\r\n      <ItemList\r\n        name='ExampleUseState_Global'\r\n        header='The variable can also be stored as a global variable.'\r\n        useHook={useButtonHandlersWithGlobal}\r\n      />\r\n      <Divider />\r\n      <Header>The variable can also be stored on Redux but requires a proper implementation.</Header>\r\n      <ItemList\r\n        name='ExampleUseState_Redux'\r\n        header='A naive implementation will cause a render every click.'\r\n        useHook={useButtonHandlersWithRedux}\r\n      />\r\n      <ItemList\r\n        name='ExampleUseState_ImprovedRedux'\r\n        header='With improved logic, the render only happens when the action changes.'\r\n        useHook={useButtonHandlersWithImprovedRedux}\r\n      />\r\n      <ItemList\r\n        name='ExampleUseState_FixedRedux'\r\n        header='With the whole logic in Redux, clicks no longer cause a render.'\r\n        useHook={useButtonHandlersWithFixedRedux}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst UseState = () => {\r\n  const name = 'ExampleUseState_UseState'\r\n  const { handleAdd, handleRemove } = useButtonHandlersWithState(name)\r\n  return (\r\n    <>\r\n      <DataList\r\n        name={name}\r\n        header='useState forces a render when the value changes. Setting the state on the parent component will render everything.'\r\n        Component={NameInputs}\r\n      />\r\n      <TrackingButton onClick={handleAdd}>+</TrackingButton>\r\n      <TrackingButton onClick={handleRemove}>-</TrackingButton>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface Props extends ButtonProps {\r\n  header: string\r\n}\r\n\r\nconst ItemList = ({ header, name, useHook }: Props) => (\r\n  <>\r\n    <DataList name={name} header={header} Component={NameInputs} />\r\n    <Buttons name={name} useHook={useHook} />\r\n  </>\r\n)\r\n\r\ninterface ButtonProps {\r\n  name: string\r\n  useHook: (name: string) => { handleAdd: () => void; handleRemove: () => void }\r\n}\r\n\r\nconst Buttons = ({ name, useHook }: ButtonProps) => {\r\n  const { handleAdd, handleRemove } = useHook(name)\r\n  return (\r\n    <>\r\n      <TrackingButton onClick={handleAdd}>+</TrackingButton>\r\n      <TrackingButton onClick={handleRemove}>-</TrackingButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExampleUseState\r\n","import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\nimport { useUpdateWithoutUseCallback } from '../app/actions'\r\nimport DataList from '../components/DataList'\r\nimport { MemoizedNameInputs, NameInputs } from '../components/NameInputs'\r\n\r\nconst ExampleUseCallback = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        useCallback can be used to keep function references same. This prevents extra renders for <u>memoized</u>{' '}\r\n        components.\r\n      </Header>\r\n      <DataList\r\n        name='ExampleHooks_WithoutUseCallback'\r\n        header='Without useCallback, everything renders on change.'\r\n        Component={MemoizedNameInputs}\r\n        componentProps={{\r\n          useHook: useUpdateWithoutUseCallback,\r\n        }}\r\n      />\r\n      <DataList\r\n        name='ExampleHooks_MemoizedNameInputs'\r\n        header='With useCallback, only the changed input renders.'\r\n        Component={MemoizedNameInputs}\r\n      />\r\n      <DataList\r\n        name='ExampleHooks_NameInputs'\r\n        header='Without memo, useCallback has no effect.'\r\n        Component={NameInputs}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExampleUseCallback\r\n","import React from 'react'\r\nimport { Container, Tab } from 'semantic-ui-react'\r\nimport './App.css'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport ExampleProps from './pages/ExampleProps'\r\nimport ExampleUseSelector from './pages/ExampleUseSelector'\r\nimport ExampleReselect from './pages/ExampleReselect'\r\nimport ExampleUseMemo from './pages/ExampleUseMemo'\r\nimport ExampleUseState from './pages/ExampleUseState'\r\nimport ExampleUseCallback from './pages/ExampleUseCallback'\r\n\r\nfunction App() {\r\n  const panes = [\r\n    {\r\n      menuItem: 'props & memo',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleProps />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useCallback',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseCallback />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useSelector',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseSelector />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useState & useRef',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseState />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useMemo',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseMemo />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'reselect',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleReselect />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Container>\r\n      <Tab panes={panes} />\r\n      <Brrrrrrrrrrrrrr />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Brrrrrrrrrrrrrr = () => (\r\n  <>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </>\r\n)\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport reducer from './reducer'\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}