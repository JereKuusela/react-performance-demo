{"version":3,"sources":["app/utils.ts","app/reducer.ts","app/selectors.ts","app/actions.ts","components/Input.tsx","components/TrackingInput.tsx","components/DataList.tsx","components/NameInputs.tsx","pages/ExampleProps.tsx","pages/ExampleUseSelector.tsx","app/reselect.ts","components/FullName.tsx","pages/ExampleReselect.tsx","pages/ExampleUseMemo.tsx","components/TrackingButton.tsx","pages/ExampleUseState.tsx","pages/ExampleUseCallback.tsx","App.tsx","app/store.ts","index.tsx"],"names":["instanceIndex","instances","getInstanceNumber","name","canAct","value","counter","doExpensiveCalculation","instance","red","blue","yellow","getNextColor","previous","initialState","names","Array","fill","map","index","first","last","clicks","slice","createSlice","reducers","set","state","payload","item","setFirstName","setLastName","add","push","length","remove","pop","addWithLogic","removeWithLogic","addClick","unboxParameters","callback","args","actions","getAllData","getData","getName","getFullName","useAllData","useSelector","useData","useName","useFullName","useFullNameWithShallow","shallowEqual","useUpdate","dispatch","useDispatch","handleFirstChange","useCallback","handleLastChange","useUpdateWithoutUseCallback","useButtonHandlersWithState","useState","setClicks","handleAdd","prev","handleRemove","reducer","type","setTimeout","Error","useButtonHandlersWithReducer","useReducer","reducerDispatch","useButtonHandlersWithRef","useRef","current","useButtonHandlersWithRefLikeState","useButtonHandlersWithGlobal","useButtonHandlersWithRedux","useButtonHandlersWithImprovedRedux","useButtonHandlersWithFixedRedux","Input","onChange","style","currentValue","setCurrentValue","useEffect","update","handleBlur","handleKeyPress","key","handleChange","event","target","onKeyPress","onBlur","size","disabled","TrackingInput","ref","backgroundColor","padding","marginRight","borderRadius","MemoizedTrackingInput","memo","DataList","header","Component","componentProps","data","Divider","Header","List","MemoizedNameInputs","useHook","children","ListItem","NameInputs","component","WithMemoizedItem","MemoizedRenderFirstName","MemoizedRenderLastName","ExampleProps","WithAllData","RenderFirstNameWithAllData","RenderLastNameWithAllData","WithData","RenderFirstNameWithData","RenderLastNameWithData","WithName","RenderFirstNameWithName","RenderLastNameWithName","WithAttribute","RenderFirstNameWithAttribute","RenderLastNameWithAttribute","useFirstName","useLastName","ExampleUseSelector","getInstance","_state","path","getFirstNameWithProps","getLastNameWithProps","createFullNameCounterSelector","createSelector","fullNameCounterSelector","useFullNameWithReselect","selector","useMemo","FullNameString","MemoizedFullNameString","MemoizedFullNameObject","FullNameRedux","MemoizedFullNameRedux","FromRedux","useFullNameCounter","FromReselect","useFullNameCounterWithReselect","FromFixedReselect","useFullNameCounterWithFixedReselect","ExampleReselect","FromObject","FromObjectWithMemo","FromString","FromStringWithoutMemoization","FromReduxShallow","FromReduxShallowWithoutMemo","ExampleUseMemo","TrackingButton","onClick","Button","border","width","height","circular","ItemList","Buttons","ExampleUseState","ExampleUseCallback","Brrrrrrrrrrrrrr","App","panes","menuItem","render","Tab","Pane","Container","store","configureStore","devTools","trace","traceLimit","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b3367b7.chunk.js","sourcesContent":["let instanceIndex = 0\r\nconst instances = {} as Record<string, number>\r\n\r\n/**\r\n * Instance numbering is used to give a separate state to each example.\r\n * Name is used to return same instance number even when an example remounts.\r\n */\r\nexport const getInstanceNumber = (name: string) => {\r\n  if (!instances[name]) instances[name] = instanceIndex++\r\n  return instances[name]\r\n}\r\n\r\nexport interface Item {\r\n  index: number\r\n  first: string\r\n  last: string\r\n}\r\n\r\nexport type UpdateHook = (\r\n  instance: number,\r\n  index: number\r\n) => { handleFirstChange: (first: string) => void; handleLastChange: (first: string) => void }\r\n\r\nexport type ItemProps = {\r\n  item: Item\r\n  instance: number\r\n  useHook?: UpdateHook\r\n}\r\nexport const canAct = (value: number) => value % 3 === 0\r\n\r\nconst counter = {} as Record<number, number>\r\n/**\r\n * Simulates expensive calculations by tracking amount of calls.\r\n * This number is shown on UI to demonstrate how wasteful default useSelectors are.\r\n */\r\nexport const doExpensiveCalculation = (instance: number) => {\r\n  if (!counter[instance]) counter[instance] = 0\r\n  return ++counter[instance]\r\n}\r\n\r\nexport const red = '#fc9d9d'\r\nexport const blue = '#827cf7'\r\nexport const yellow = '#e0de6e'\r\nexport const white = 'white'\r\n\r\nexport const getNextColor = (previous: string) => {\r\n  switch (previous) {\r\n    case white:\r\n      return red\r\n    case red:\r\n      return blue\r\n    case blue:\r\n      return yellow\r\n    case yellow:\r\n      return red\r\n    default:\r\n      return red\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { canAct, Item } from './utils'\r\n\r\ninterface State {\r\n  names: Item[][]\r\n  clicks: number\r\n}\r\n\r\nconst initialState: State = {\r\n  names: Array(50)\r\n    .fill(null)\r\n    .map(() => [\r\n      { index: 0, first: 'John', last: 'Doe' },\r\n      { index: 1, first: 'Jane', last: 'Doe' },\r\n      { index: 2, first: 'Jay', last: 'Doe' },\r\n      { index: 3, first: 'Jean', last: 'Doe' },\r\n    ]),\r\n  clicks: 1,\r\n}\r\n\r\nexport const slice = createSlice({\r\n  name: 'name',\r\n  initialState,\r\n  reducers: {\r\n    set: (state, { payload }: PayloadAction<[number, Item]>) => {\r\n      const [instance, item] = payload\r\n      state.names[instance][item.index] = item\r\n    },\r\n    setFirstName: (state, { payload }: PayloadAction<[number, number, string]>) => {\r\n      const [instance, index, name] = payload\r\n      state.names[instance][index].first = name\r\n    },\r\n    setLastName: (state, { payload }: PayloadAction<[number, number, string]>) => {\r\n      const [instance, index, name] = payload\r\n      state.names[instance][index].last = name\r\n    },\r\n    add: (state, { payload }: PayloadAction<[number]>) => {\r\n      const [instance] = payload\r\n      state.names[instance].push({ index: state.names[instance].length, first: '', last: '' })\r\n    },\r\n    remove: (state, { payload }: PayloadAction<[number]>) => {\r\n      const [instance] = payload\r\n      state.names[instance].pop()\r\n    },\r\n    addWithLogic: (state, { payload }: PayloadAction<[number]>) => {\r\n      if (canAct(state.clicks)) {\r\n        const [instance] = payload\r\n        state.names[instance].push({ index: state.names[instance].length, first: '', last: '' })\r\n      }\r\n      state.clicks++\r\n    },\r\n    removeWithLogic: (state, { payload }: PayloadAction<[number]>) => {\r\n      if (canAct(state.clicks)) {\r\n        const [instance] = payload\r\n        state.names[instance].pop()\r\n      }\r\n      state.clicks++\r\n    },\r\n    addClick: (state) => {\r\n      state.clicks++\r\n    },\r\n  },\r\n})\r\n\r\nconst unboxParameters = <T extends unknown[]>(callback: (args: T) => void) => (...args: T) => callback(args)\r\n\r\nexport const set = unboxParameters(slice.actions.set)\r\nexport const setFirstName = unboxParameters(slice.actions.setFirstName)\r\nexport const setLastName = unboxParameters(slice.actions.setLastName)\r\nexport const add = unboxParameters(slice.actions.add)\r\nexport const remove = unboxParameters(slice.actions.remove)\r\nexport const addWithLogic = unboxParameters(slice.actions.addWithLogic)\r\nexport const removeWithLogic = unboxParameters(slice.actions.removeWithLogic)\r\nexport const addClick = slice.actions.addClick\r\n\r\nexport default slice.reducer\r\n","// Selector hooks to return data from Redux.\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport { canAct } from './utils'\r\n\r\nconst getAllData = (state: RootState) => state.names\r\nconst getData = (state: RootState, instance: number) => getAllData(state)[instance]\r\nconst getName = (state: RootState, instance: number, index: number) => getData(state, instance)[index]\r\nconst getFullName = (state: RootState, instance: number, index: number) => {\r\n  const { first, last } = getName(state, instance, index)\r\n  return { first, last }\r\n}\r\n\r\nexport const useAllData = () => useSelector(getAllData)\r\n\r\nexport const useData = (instance: number) => useSelector((state: RootState) => getData(state, instance))\r\n\r\nexport const useName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index))\r\n\r\nexport const useFirstName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index).first)\r\n\r\nexport const useLastName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getName(state, instance, index).last)\r\n\r\nexport const useFullName = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getFullName(state, instance, index))\r\n\r\nexport const useFullNameWithShallow = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => getFullName(state, instance, index), shallowEqual)\r\n\r\nexport const useClicks = () => useSelector((state: RootState) => state.clicks)\r\n\r\nexport const useCanAct = () => useSelector((state: RootState) => canAct(state.clicks))\r\n","import { useCallback, useReducer, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { add, addClick, addWithLogic, remove, removeWithLogic, setFirstName, setLastName } from './reducer'\r\nimport { useClicks, useCanAct } from './selectors'\r\nimport { getInstanceNumber, canAct } from './utils'\r\n\r\nexport const useUpdate = (instance: number, index: number) => {\r\n  const dispatch = useDispatch()\r\n  const handleFirstChange = useCallback(\r\n    (first: string) => {\r\n      dispatch(setFirstName(instance, index, first))\r\n    },\r\n    [dispatch, instance, index]\r\n  )\r\n  const handleLastChange = useCallback(\r\n    (last: string) => {\r\n      dispatch(setLastName(instance, index, last))\r\n    },\r\n    [dispatch, instance, index]\r\n  )\r\n  return { handleFirstChange, handleLastChange }\r\n}\r\n\r\nexport const useUpdateWithoutUseCallback = (instance: number, index: number) => {\r\n  const dispatch = useDispatch()\r\n  const handleFirstChange = (first: string) => {\r\n    dispatch(setFirstName(instance, index, first))\r\n  }\r\n  const handleLastChange = (last: string) => {\r\n    dispatch(setLastName(instance, index, last))\r\n  }\r\n  return { handleFirstChange, handleLastChange }\r\n}\r\n\r\nexport const useButtonHandlersWithState = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  // The value of the state is not directly used at all.\r\n  const [, setClicks] = useState(1)\r\n  const dispatch = useDispatch()\r\n  // Using the update function means the click value is not needed on the dependency array.\r\n  // This keeps references of handlers the same so all renders are caused by useState.\r\n  // Note: This is not recommended way to write code. Update functions should have no side effects.\r\n  // On real code, using this kind of trick is pointless because useState causes renders anyways.\r\n  // On development mode, React will call update functions twice to show these kind of mistakes.\r\n  const handleAdd = useCallback(() => {\r\n    setClicks((prev) => {\r\n      if (canAct(prev)) dispatch(add(instance))\r\n      return prev + 1\r\n    })\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    setClicks((prev) => {\r\n      if (canAct(prev)) dispatch(remove(instance))\r\n      return prev + 1\r\n    })\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nconst reducer = (state: { dispatch: any; clicks: number; instance: number }, type: string) => {\r\n  const { dispatch, instance, clicks } = state\r\n  switch (type) {\r\n    case 'add':\r\n      // Doing the update logic here means that click handlers have no dependencies.\r\n      // This keeps references of handlers the same so all renders are caused by useReducer.\r\n      // Note: This is not recommended way to write code. Reducer functions should have no side effects.\r\n      // On real code, using this kind of trick is pointless because useReducer causes renders anyways.\r\n      // On development mode, React will call reducer functions twice to show these kind of mistakes.\r\n      if (canAct(clicks)) setTimeout(() => dispatch(add(instance)), 50)\r\n      return { ...state, clicks: clicks + 1 }\r\n    case 'remove':\r\n      if (canAct(clicks)) dispatch(remove(instance))\r\n      return { ...state, clicks: clicks + 1 }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nexport const useButtonHandlersWithReducer = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const dispatch = useDispatch()\r\n  const [, reducerDispatch] = useReducer(reducer, { dispatch, instance, clicks: 1 })\r\n  const handleAdd = useCallback(() => {\r\n    reducerDispatch('add')\r\n  }, [])\r\n  const handleRemove = useCallback(() => {\r\n    reducerDispatch('remove')\r\n  }, [])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithRef = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const clicks = useRef(1)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks.current)) dispatch(add(instance))\r\n    clicks.current++\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks.current)) dispatch(remove(instance))\r\n    clicks.current++\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithRefLikeState = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  // Value can only be mutated because the update function is not used.\r\n  const [value] = useState({ current: 1 })\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(value.current)) dispatch(add(instance))\r\n    value.current++\r\n  }, [dispatch, instance, value])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(value.current)) dispatch(remove(instance))\r\n    value.current++\r\n  }, [dispatch, instance, value])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nlet clicks = 1\r\n\r\nexport const useButtonHandlersWithGlobal = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(add(instance))\r\n    clicks++\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(remove(instance))\r\n    clicks++\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const clicks = useClicks()\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(add(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, clicks])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct(clicks)) dispatch(remove(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, clicks])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithImprovedRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const canAct = useCanAct()\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    if (canAct) dispatch(add(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, canAct])\r\n  const handleRemove = useCallback(() => {\r\n    if (canAct) dispatch(remove(instance))\r\n    dispatch(addClick())\r\n  }, [dispatch, instance, canAct])\r\n  return { handleAdd, handleRemove }\r\n}\r\n\r\nexport const useButtonHandlersWithFixedRedux = (name: string) => {\r\n  const instance = getInstanceNumber(name)\r\n  const dispatch = useDispatch()\r\n  const handleAdd = useCallback(() => {\r\n    dispatch(addWithLogic(instance))\r\n  }, [dispatch, instance])\r\n  const handleRemove = useCallback(() => {\r\n    dispatch(removeWithLogic(instance))\r\n  }, [dispatch, instance])\r\n  return { handleAdd, handleRemove }\r\n}\r\n","import React, { CSSProperties, useCallback, useEffect, useState } from 'react'\r\nimport { Input as SInput } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  value: string\r\n  onChange?: (value: string) => void\r\n  style?: CSSProperties\r\n}\r\n\r\n/**\r\n * A wrapper for input to only update the value when pressing enter or when losing focus.\r\n */\r\nconst Input = ({ value, onChange, style }: Props) => {\r\n  const [currentValue, setCurrentValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    setCurrentValue(value)\r\n  }, [value])\r\n\r\n  const update = useCallback(() => {\r\n    setCurrentValue((prev) => {\r\n      if (prev !== value && onChange) onChange(prev)\r\n      return prev\r\n    })\r\n  }, [onChange, value])\r\n\r\n  const handleBlur = useCallback(() => {\r\n    update()\r\n  }, [update])\r\n\r\n  const handleKeyPress = useCallback(\r\n    ({ key }) => {\r\n      if (key === 'Enter') update()\r\n    },\r\n    [update]\r\n  )\r\n\r\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentValue(event.target.value)\r\n  }, [])\r\n\r\n  return (\r\n    <SInput\r\n      value={currentValue}\r\n      onKeyPress={handleKeyPress}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      style={style}\r\n      size='small'\r\n      disabled={!onChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { useRef, useEffect, memo } from 'react'\r\nimport { getNextColor } from '../app/utils'\r\nimport Input from './Input'\r\n\r\n/**\r\n * A text input that tracks rendering with background color.\r\n */\r\nexport const TrackingInput = ({ value, onChange }: { value: string; onChange?: (value: string) => void }) => {\r\n  const ref = useRef('')\r\n  useEffect(() => {\r\n    ref.current = getNextColor(ref.current)\r\n  })\r\n  return (\r\n    <Input\r\n      value={value}\r\n      onChange={onChange}\r\n      style={{ backgroundColor: ref.current, padding: 5, marginRight: 5, borderRadius: 5 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const MemoizedTrackingInput = memo(TrackingInput)\r\n","import React, { FC } from 'react'\r\nimport { Divider, Header, List } from 'semantic-ui-react'\r\nimport { getInstanceNumber, ItemProps } from '../app/utils'\r\nimport { useData } from '../app/selectors'\r\n\r\ninterface Props<C> {\r\n  name: string\r\n  header: string\r\n  Component: FC<C & ItemProps>\r\n  componentProps?: C\r\n}\r\n\r\n/**\r\n * Renders items of an instance with a given component.\r\n * This is used by all of the examples.\r\n */\r\nconst DataList = <C extends unknown>({ header, name, Component, componentProps }: Props<C>) => {\r\n  const instance = getInstanceNumber(name)\r\n  const data = useData(instance)\r\n  return (\r\n    <>\r\n      <Divider />\r\n      <Header size='small'>{header}</Header>\r\n      <List>\r\n        {data.map((item) => (\r\n          <Component item={item} key={item.index} instance={instance} {...componentProps} />\r\n        ))}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DataList\r\n","import React, { PropsWithChildren } from 'react'\r\nimport { ListItem } from 'semantic-ui-react'\r\nimport { ItemProps } from '../app/utils'\r\nimport { MemoizedTrackingInput, TrackingInput } from './TrackingInput'\r\nimport { useUpdate } from '../app/actions'\r\n\r\nexport const MemoizedNameInputs = ({ item, instance, useHook, children }: PropsWithChildren<ItemProps>) => {\r\n  const { first, last, index } = item\r\n  const hook = useHook ?? useUpdate\r\n  const { handleFirstChange, handleLastChange } = hook(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <MemoizedTrackingInput value={first} onChange={handleFirstChange} />\r\n      <MemoizedTrackingInput value={last} onChange={handleLastChange} />\r\n      {children}\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport const NameInputs = ({ item, instance, useHook, children }: PropsWithChildren<ItemProps>) => {\r\n  const { first, last, index } = item\r\n  const hook = useHook ?? useUpdate\r\n  const { handleFirstChange, handleLastChange } = hook(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <TrackingInput value={first} onChange={handleFirstChange} />\r\n      <TrackingInput value={last} onChange={handleLastChange} />\r\n      {children}\r\n    </ListItem>\r\n  )\r\n}\r\n","import React, { memo } from 'react'\r\nimport { Divider, Header, ItemProps, ListItem } from 'semantic-ui-react'\r\nimport { useUpdate } from '../app/actions'\r\nimport { TrackingInput } from '../components/TrackingInput'\r\nimport DataList from '../components/DataList'\r\nimport { NameInputs, MemoizedNameInputs } from '../components/NameInputs'\r\nimport { Item } from '../app/utils'\r\n\r\nconst component = 'ExampleProps_'\r\n\r\nconst ExampleProps = () => {\r\n  return (\r\n    <>\r\n      <Header>Components render when parent renders. This can be prevented with memo.</Header>\r\n      <DataList name={`${component}NameInputs`} header='Everything renders on change.' Component={NameInputs} />\r\n      <DataList\r\n        name={`${component}MemoizedNameInputs`}\r\n        header='With memo, only the changed input renders.'\r\n        Component={MemoizedNameInputs}\r\n      />\r\n      <Divider />\r\n      <Header>\r\n        Components also render when props change. This is important when using references (objects, arrays, functions).\r\n      </Header>\r\n      <DataList\r\n        name={`${component}WithMemoizedItem`}\r\n        header='When props are delivered as an object, the whole row renders.'\r\n        Component={WithMemoizedItem}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst WithMemoizedItem = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <MemoizedRenderFirstName item={item} onChange={handleFirstChange} />\r\n      <MemoizedRenderLastName item={item} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst MemoizedRenderFirstName = memo(({ item, onChange }: { item: Item; onChange: (value: string) => void }) => (\r\n  <TrackingInput value={item.first} onChange={onChange} />\r\n))\r\n\r\nconst MemoizedRenderLastName = memo(({ item, onChange }: { item: Item; onChange: (value: string) => void }) => (\r\n  <TrackingInput value={item.last} onChange={onChange} />\r\n))\r\n\r\nexport default ExampleProps\r\n","import React, { memo } from 'react'\r\nimport { Header, ItemProps, ListItem } from 'semantic-ui-react'\r\nimport { useUpdate } from '../app/actions'\r\nimport { TrackingInput } from '../components/TrackingInput'\r\nimport { useData, useAllData, useName, useFirstName, useLastName } from '../app/selectors'\r\nimport DataList from '../components/DataList'\r\n\r\nconst ExampleUseSelector = () => {\r\n  return (\r\n    <>\r\n      <Header>useSelector forces a render if the return value changes.</Header>\r\n      <Header>So universal hooks will cause unnecessary renders even when the component data doesn't change.</Header>\r\n      <DataList\r\n        name='ExampleUseSelector_AllData'\r\n        header='Uses data from all instances. Renders even when other components change.'\r\n        Component={WithAllData}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Data'\r\n        header='Uses all data from own instance. All inputs render.'\r\n        Component={WithData}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Name'\r\n        header='Uses the whole name object. The whole row renders.'\r\n        Component={WithName}\r\n      />\r\n      <DataList\r\n        name='ExampleUseSelector_Attribute'\r\n        header='Uses only the needed attribute. Only the changed value renders.'\r\n        Component={WithAttribute}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst WithAllData = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithAllData instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithAllData instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithData = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithData instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithData instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithName = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithName instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithName instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst WithAttribute = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const { handleFirstChange, handleLastChange } = useUpdate(instance, index)\r\n\r\n  return (\r\n    <ListItem>\r\n      <RenderFirstNameWithAttribute instance={instance} index={index} onChange={handleFirstChange} />\r\n      <RenderLastNameWithAttribute instance={instance} index={index} onChange={handleLastChange} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\ninterface DataProps {\r\n  instance: number\r\n  index: number\r\n  onChange: (value: string) => void\r\n}\r\n\r\nconst RenderFirstNameWithAllData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useAllData()[instance][index].first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithAllData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useAllData()[instance][index].last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useData(instance)[index].first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithData = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useData(instance)[index].last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithName = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useName(instance, index).first\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithName = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useName(instance, index).last\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderFirstNameWithAttribute = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useFirstName(instance, index)\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\n\r\nconst RenderLastNameWithAttribute = memo(({ instance, index, onChange }: DataProps) => {\r\n  const value = useLastName(instance, index)\r\n  return <TrackingInput value={value} onChange={onChange} />\r\n})\r\nexport default ExampleUseSelector\r\n","// Selector hooks with reselect to return data from Redux.\r\nimport { createSelector } from '@reduxjs/toolkit'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport { doExpensiveCalculation } from './utils'\r\n\r\nconst getName = (state: RootState, instance: number, index: number) => state.names[instance][index]\r\n\r\nconst getInstance = (_state: RootState, path: [number, number]) => path[0]\r\nconst getFirstNameWithProps = (state: RootState, path: [number, number]) => getName(state, path[0], path[1]).first\r\nconst getLastNameWithProps = (state: RootState, path: [number, number]) => getName(state, path[0], path[1]).last\r\nconst createFullNameCounterSelector = () =>\r\n  createSelector(\r\n    getInstance,\r\n    getFirstNameWithProps,\r\n    getLastNameWithProps,\r\n    (instance, first, last) => `${first} ${last} ${doExpensiveCalculation(instance)}`\r\n  )\r\nconst fullNameCounterSelector = createFullNameCounterSelector()\r\n\r\nexport const useFullNameCounter = (instance: number, index: number) => {\r\n  return useSelector((state: RootState) => {\r\n    const { first, last } = getName(state, instance, index)\r\n    return `${first} ${last} ${doExpensiveCalculation(instance)}`\r\n  })\r\n}\r\n\r\nexport const useFullNameCounterWithReselect = (instance: number, index: number) =>\r\n  useSelector((state: RootState) => fullNameCounterSelector(state, [instance, index]))\r\n\r\nexport const useFullNameCounterWithFixedReselect = (instance: number, index: number) => {\r\n  const selector = useMemo(() => createFullNameCounterSelector(), [])\r\n  return useSelector((state: RootState) => selector(state, [instance, index]))\r\n}\r\nconst createFullNameSelector = () =>\r\n  createSelector(getFirstNameWithProps, getLastNameWithProps, (first, last) => ({ first, last }))\r\n\r\nexport const useFullNameWithReselect = (instance: number, index: number) => {\r\n  const selector = useMemo(() => createFullNameSelector(), [])\r\n  return useSelector((state: RootState) => selector(state, [instance, index]))\r\n}\r\n","// Inputs to show a full name.\r\nimport React, { memo } from 'react'\r\nimport { TrackingInput } from './TrackingInput'\r\n\r\nexport const FullNameString = ({ name }: { name: string }) => <TrackingInput value={name} />\r\n\r\nexport const MemoizedFullNameString = memo(FullNameString)\r\n\r\nexport const MemoizedFullNameObject = memo(({ name }: { name: { first: string; last: string } }) => (\r\n  <FullNameString name={`${name.first} ${name.last}`} />\r\n))\r\n\r\ninterface Props {\r\n  instance: number\r\n  index: number\r\n  selector: (instance: number, index: number) => { first: string; last: string }\r\n}\r\n\r\nexport const FullNameRedux = ({ instance, index, selector }: Props) => {\r\n  const name = selector(instance, index)\r\n\r\n  return <MemoizedFullNameObject name={name} />\r\n}\r\n\r\nexport const MemoizedFullNameRedux = memo(FullNameRedux)\r\n","import React, { memo } from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\nimport {\r\n  useFullNameCounter,\r\n  useFullNameCounterWithReselect,\r\n  useFullNameCounterWithFixedReselect,\r\n} from '../app/reselect'\r\nimport {} from '../app/selectors'\r\nimport { ItemProps } from '../app/utils'\r\nimport DataList from '../components/DataList'\r\nimport { FullNameString } from '../components/FullName'\r\nimport { MemoizedNameInputs } from '../components/NameInputs'\r\n\r\nconst component = 'ExampleReselect_'\r\n\r\nconst ExampleReselect = () => {\r\n  return (\r\n    <>\r\n      <Header>reselect library allows memoization based on input instead of output values.</Header>\r\n      <Header>This can be used to avoid expensive calculations and reusing complex selector logic.</Header>\r\n      <DataList\r\n        name={`${component}FromRedux`}\r\n        header='Without reselect, the full name is recalculated every time.'\r\n        Component={FromRedux}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReselect`}\r\n        header=\"Default implementation of reselect doesn't work for lists (cachesize of 1).\"\r\n        Component={FromReselect}\r\n      />\r\n      <DataList\r\n        name={`${component}FromFixedReselect`}\r\n        header='This can be fixed by creating selector instance for every item.'\r\n        Component={FromFixedReselect}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst FromRedux = memo(({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounter(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n})\r\n\r\nconst FromReselect = memo(({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounterWithReselect(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n})\r\n\r\nconst FromFixedReselect = memo(({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  const name = useFullNameCounterWithFixedReselect(instance, index)\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n})\r\n\r\nexport default ExampleReselect\r\n","import React, { useMemo } from 'react'\r\nimport { Divider, Header } from 'semantic-ui-react'\r\nimport DataList from '../components/DataList'\r\nimport { ItemProps } from '../app/utils'\r\nimport { MemoizedNameInputs } from '../components/NameInputs'\r\nimport {\r\n  MemoizedFullNameObject,\r\n  MemoizedFullNameRedux,\r\n  FullNameRedux,\r\n  MemoizedFullNameString,\r\n  FullNameString,\r\n} from '../components/FullName'\r\nimport { useFullName, useFullNameWithShallow } from '../app/selectors'\r\nimport { useFullNameWithReselect } from '../app/reselect'\r\n\r\nconst component = 'ExampleUseMemo_'\r\n\r\nconst ExampleUseMemo = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        useMemo can be used to keep object references same. This prevents extra renders for <u>memoized</u> components.\r\n      </Header>\r\n      <DataList\r\n        name={`${component}FromObject`}\r\n        header='Full name field gets props as an object. This object is created every render with a different reference.'\r\n        Component={FromObject}\r\n      />\r\n      <DataList\r\n        name={`${component}FromObjectWithMemo`}\r\n        header='With useMemo, only the changed name renders.'\r\n        Component={FromObjectWithMemo}\r\n      />\r\n      <Divider />\r\n      <Header>useMemo is pointless for plain values like strings (except if the calculation is expensive).</Header>\r\n      <DataList\r\n        name={`${component}FromString`}\r\n        header='Full name field gets props as an string, only the changed name renders.'\r\n        Component={FromString}\r\n      />\r\n      <DataList\r\n        name={`${component}FromStringWithouMemoization`}\r\n        header=\"Without memoization, useMemo is still pointless because it doesn't prevent renders.\"\r\n        Component={FromStringWithoutMemoization}\r\n      />\r\n      <Divider />\r\n      <Header>Redux can also be used but requires a proper implementation.</Header>\r\n      <DataList\r\n        name={`${component}FromRedux`}\r\n        header='The original issue exists with the default implementation.'\r\n        Component={FromRedux}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReduxShallow`}\r\n        header='useSelector supports memoization to prevent unnecessary renders.'\r\n        Component={FromReduxShallow}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReduxShallowWithoutMemo`}\r\n        header='useSelector has a bit surpising feature that the memoization is forgotten when the parent causes the render.'\r\n        Component={FromReduxShallowWithoutMemo}\r\n      />\r\n      <DataList\r\n        name={`${component}FromReselect`}\r\n        header='This works better with reselect library.'\r\n        Component={FromReselect}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst FromObject = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = { first, last }\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameObject name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromObjectWithMemo = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = useMemo(() => ({ first, last }), [first, last])\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameObject name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromString = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameString name={`${first} ${last}`} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromStringWithoutMemoization = ({ item, instance }: ItemProps) => {\r\n  const { first, last } = item\r\n  const name = useMemo(() => `${first} ${last}`, [first, last])\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameString name={name} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromRedux = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameRedux instance={instance} index={index} selector={useFullName} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReduxShallow = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <MemoizedFullNameRedux instance={instance} index={index} selector={useFullNameWithShallow} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReduxShallowWithoutMemo = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameRedux instance={instance} index={index} selector={useFullNameWithShallow} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nconst FromReselect = ({ item, instance }: ItemProps) => {\r\n  const { index } = item\r\n  return (\r\n    <MemoizedNameInputs item={item} instance={instance}>\r\n      <FullNameRedux instance={instance} index={index} selector={useFullNameWithReselect} />\r\n    </MemoizedNameInputs>\r\n  )\r\n}\r\n\r\nexport default ExampleUseMemo\r\n","import React, { PropsWithChildren, useEffect, useRef } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { getNextColor } from '../app/utils'\r\n/**\r\n * A button that tracks rendering with background color.\r\n */\r\nconst TrackingButton = ({ children, onClick }: PropsWithChildren<{ onClick: () => void }>) => {\r\n  const ref = useRef('')\r\n  useEffect(() => {\r\n    ref.current = getNextColor(ref.current)\r\n  })\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: ref.current, padding: 5, border: 'solid 2px black', width: 40, height: 40 }}\r\n      circular\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default TrackingButton\r\n","import React from 'react'\r\nimport { Divider, Header } from 'semantic-ui-react'\r\nimport DataList from '../components/DataList'\r\nimport TrackingButton from '../components/TrackingButton'\r\nimport { MemoizedNameInputs } from '../components/NameInputs'\r\nimport {\r\n  useButtonHandlersWithState,\r\n  useButtonHandlersWithRef,\r\n  useButtonHandlersWithGlobal,\r\n  useButtonHandlersWithRedux,\r\n  useButtonHandlersWithImprovedRedux,\r\n  useButtonHandlersWithFixedRedux,\r\n  useButtonHandlersWithRefLikeState,\r\n  useButtonHandlersWithReducer,\r\n} from '../app/actions'\r\n\r\nconst component = 'ExampleUseState_'\r\n\r\nconst ExampleUseState = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        In the following example, add and remove buttons only work every 3th click. <u>No memoization</u> is used.\r\n      </Header>\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithState`}\r\n        header='useState forces a render when the value changes so every click will render both buttons.'\r\n        useHook={useButtonHandlersWithState}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithReducer`}\r\n        header='With useReducer, clicks no longer cause a render.'\r\n        useHook={useButtonHandlersWithReducer}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithRef`}\r\n        header='With useRef, clicks no longer cause a render.'\r\n        useHook={useButtonHandlersWithRef}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithRefLikeState`}\r\n        header='useState can only also be used like useRef.'\r\n        useHook={useButtonHandlersWithRefLikeState}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithGlobal`}\r\n        header='The variable can also be stored as a global variable.'\r\n        useHook={useButtonHandlersWithGlobal}\r\n      />\r\n      <Divider />\r\n      <Header>The variable can also be stored on Redux but requires a proper implementation.</Header>\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithRedux`}\r\n        header='A naive implementation will cause a render every click.'\r\n        useHook={useButtonHandlersWithRedux}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithImprovedRedux`}\r\n        header='With improved logic, the render happens when the action changes.'\r\n        useHook={useButtonHandlersWithImprovedRedux}\r\n      />\r\n      <ItemList\r\n        name={`${component}useButtonHandlersWithFixedRedux`}\r\n        header='With the whole logic in Redux, clicks no longer cause a render.'\r\n        useHook={useButtonHandlersWithFixedRedux}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\ninterface Props extends ButtonProps {\r\n  header: string\r\n}\r\n\r\nconst ItemList = ({ header, name, useHook }: Props) => (\r\n  <>\r\n    <DataList name={name} header={header} Component={MemoizedNameInputs} />\r\n    <Buttons name={name} useHook={useHook} />\r\n  </>\r\n)\r\n\r\ninterface ButtonProps {\r\n  name: string\r\n  useHook: (name: string) => { handleAdd: () => void; handleRemove: () => void }\r\n}\r\n\r\nconst Buttons = ({ name, useHook }: ButtonProps) => {\r\n  const { handleAdd, handleRemove } = useHook(name)\r\n  return (\r\n    <>\r\n      <TrackingButton onClick={handleAdd}>+</TrackingButton>\r\n      <TrackingButton onClick={handleRemove}>-</TrackingButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExampleUseState\r\n","import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\nimport { useUpdateWithoutUseCallback } from '../app/actions'\r\nimport DataList from '../components/DataList'\r\nimport { MemoizedNameInputs, NameInputs } from '../components/NameInputs'\r\n\r\nconst ExampleUseCallback = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        useCallback can be used to keep function references same. This prevents extra renders for <u>memoized</u>{' '}\r\n        components.\r\n      </Header>\r\n      <DataList\r\n        name='ExampleHooks_MemoizedNameInputs'\r\n        header='With useCallback, only the changed input renders.'\r\n        Component={MemoizedNameInputs}\r\n      />\r\n      <DataList\r\n        name='ExampleHooks_WithoutUseCallback'\r\n        header='Without useCallback, everything renders on change.'\r\n        Component={MemoizedNameInputs}\r\n        componentProps={{\r\n          useHook: useUpdateWithoutUseCallback,\r\n        }}\r\n      />\r\n      <DataList\r\n        name='ExampleHooks_NameInputs'\r\n        header='Without memo, useCallback has no effect.'\r\n        Component={NameInputs}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExampleUseCallback\r\n","import React from 'react'\r\nimport { Container, Tab } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport ExampleProps from './pages/ExampleProps'\r\nimport ExampleUseSelector from './pages/ExampleUseSelector'\r\nimport ExampleReselect from './pages/ExampleReselect'\r\nimport ExampleUseMemo from './pages/ExampleUseMemo'\r\nimport ExampleUseState from './pages/ExampleUseState'\r\nimport ExampleUseCallback from './pages/ExampleUseCallback'\r\n\r\nfunction App() {\r\n  const panes = [\r\n    {\r\n      menuItem: 'props & memo',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleProps />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useCallback',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseCallback />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useSelector',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseSelector />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useState & useRef',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseState />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'useMemo',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleUseMemo />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: 'reselect',\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ExampleReselect />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Container>\r\n      <Tab panes={panes} />\r\n      <Brrrrrrrrrrrrrr />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Brrrrrrrrrrrrrr = () => (\r\n  <>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </>\r\n)\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport reducer from './reducer'\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  devTools: { trace: true, traceLimit: 20 },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}